{"version":3,"sources":["components/TodoTask.tsx","App.tsx","index.tsx"],"names":["TodoTask","task","deleteTask","completeTask","className","isComplete","taskName","type","onClick","App","useState","setTask","query","setQuery","setIsComplete","todoList","setTodoList","prepareTodoList","setPrepareTodoList","handleChange","event","target","name","value","console","log","filter","toLowerCase","includes","taskNameToDelete","taskNameToComplete","map","onSubmit","e","preventDefault","htmlFor","placeholder","onChange","id","newTask","uuidv4","role","aria-label","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.739292f8.chunk.js","sourcesContent":["/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/quotes */\nimport React from \"react\";\nimport { ITask } from \"../Interfaces\";\n\ninterface Props {\n  task: ITask;\n  deleteTask(taskNameToDelete:string): void;\n  completeTask(taskNameToComplete:string): void;\n}\n\nconst TodoTask = ({ task, deleteTask, completeTask }: Props) => {\n  return (\n    <div className=\"task\">\n      <div className=\"content\">\n        <span className={!task.isComplete ? 'btn-danger' : 'btn-success'}>{task.taskName}</span>\n      </div>\n      <button\n        className=\"btn btn-success btn-sm\"\n        type=\"button\"\n        onClick={() => {\n          completeTask(task.taskName);\n        }}\n      >\n        Complete Task\n      </button>\n      <button\n        className=\"btn btn-danger btn-sm\"\n        type=\"button\"\n        onClick={() => {\n          deleteTask(task.taskName);\n        }}\n      >\n        X\n      </button>\n    </div>\n  );\n};\n\nexport default TodoTask;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-shadow */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-key */\n/* eslint-disable no-console */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { FC, ChangeEvent, useState } from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport TodoTask from './components/TodoTask';\nimport { ITask } from './Interfaces';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const App: FC = () => {\n  const [task, setTask] = useState<string>('');\n  const [query, setQuery] = useState<string>('');\n  const [isComplete, setIsComplete] = useState<boolean>(false);\n  const [todoList, setTodoList] = useState<ITask[]>([]);\n  const [prepareTodoList, setPrepareTodoList] = useState<ITask[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.name === 'task') {\n      setTask(event.target.value);\n    } else {\n      setQuery(event.target.value);\n      console.log(query);\n      setPrepareTodoList(todoList.filter((task) => {\n        console.log(query, 'inside');\n\n        return task.taskName.toLowerCase().includes(query.toLowerCase());\n      }));\n    }\n  };\n\n  const addTask = (): void => {\n    const newTask = {\n      taskName: task,\n      isComplete: false,\n      id: uuidv4(),\n    };\n\n    console.log(todoList);\n    setTodoList([...todoList, newTask]);\n    console.log(todoList);\n    setPrepareTodoList([...prepareTodoList, newTask]);\n    setTask('');\n    setIsComplete(false);\n  };\n\n  const deleteTask = (taskNameToDelete: string):void => {\n    setTodoList(todoList.filter((task) => {\n      return task.taskName !== taskNameToDelete;\n    }));\n\n    setPrepareTodoList(prepareTodoList.filter((task) => {\n      return task.taskName !== taskNameToDelete;\n    }));\n  };\n\n  const completeTask = (taskNameToComplete: string):void => {\n    setTodoList(todoList.map((task) => {\n      if (task.taskName === taskNameToComplete) {\n        // eslint-disable-next-line no-param-reassign\n        task.isComplete = !task.isComplete;\n      }\n\n      return task;\n    }));\n  };\n\n  const showAll = (): void => {\n    setPrepareTodoList(todoList.filter((task) => {\n      return task;\n    }));\n  };\n\n  const showInProgress = (): void => {\n    setPrepareTodoList(todoList.filter((task) => {\n      return task.isComplete === false;\n    }));\n  };\n\n  const showDone = (): void => {\n    setPrepareTodoList(todoList.filter((task) => {\n      return task.isComplete === true;\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={e => {\n        e.preventDefault();\n      }}\n      >\n        <div className=\"mb-3 row\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Create task</label>\n          <div className=\"d-flex\">\n            <input\n              type=\"text\"\n              placeholder=\"Please enter task\"\n              name=\"task\"\n              value={task}\n              onChange={(event) => (\n                handleChange(event)\n              )}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={addTask}\n            >\n              Add Task\n            </button>\n          </div>\n          <label htmlFor=\"exampleInputEmail2\" className=\"form-label\">Search task</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter key word\"\n            name=\"query\"\n            value={query}\n            onChange={(event) => (\n              handleChange(event)\n            )}\n            className=\"form-control\"\n            id=\"exampleInputEmail2\"\n          />\n        </div>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-primary\" onClick={showAll}>Show All</button>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={showInProgress}>In progress</button>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={showDone}>Done task</button>\n        </div>\n      </form>\n\n      <ul className=\"list-group\">\n        {prepareTodoList.map((task: ITask, key: number) => {\n          return (\n            <li className=\"list-group-item\" key={task.id}>\n              <TodoTask\n                task={task}\n                deleteTask={deleteTask}\n                completeTask={completeTask}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}