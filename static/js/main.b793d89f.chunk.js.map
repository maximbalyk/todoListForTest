{"version":3,"sources":["components/TodoTask.tsx","App.tsx","index.tsx"],"names":["TodoTask","task","deleteTask","completeTask","className","width","src","isComplete","alt","taskName","role","aria-label","type","onClick","id","App","useState","setTask","query","setQuery","setIsComplete","todoList","setTodoList","prepareTodoList","setPrepareTodoList","handleChange","event","target","name","value","filter","toLowerCase","includes","addTask","newTask","uuidv4","taskIdToDelete","taskIdToComplete","map","onSubmit","e","preventDefault","htmlFor","placeholder","onKeyPress","key","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b793d89f.chunk.js","sourcesContent":["/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/quotes */\nimport React from \"react\";\nimport { ITask } from \"../Interfaces\";\n\ninterface Props {\n  task: ITask;\n  deleteTask(taskNameToDelete:string): void;\n  completeTask(taskNameToComplete:string): void;\n}\n\nconst TodoTask = ({ task, deleteTask, completeTask }: Props) => {\n  return (\n    <div className=\"task\">\n      <div className=\"content\">\n        <img width=\"42px\" src={!task.isComplete ? '../square.svg' : '../square_ok.svg'} alt=\"\" />\n        <span className=\"btn-light\">\n          {task.taskName}\n        </span>\n      </div>\n      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n        <button\n          className=\"btn btn-dark btn-sm\"\n          type=\"button\"\n          onClick={() => {\n            completeTask(task.id);\n          }}\n        >\n          Complete Task\n        </button>\n        <button\n          className=\"btn btn-dark btn-sm\"\n          type=\"button\"\n          onClick={() => {\n            deleteTask(task.id);\n          }}\n        >\n          X\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoTask;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-shadow */\nimport React, { FC, ChangeEvent, useState } from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport TodoTask from './components/TodoTask';\nimport { ITask } from './Interfaces';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport const App: FC = () => {\n  const [task, setTask] = useState('');\n  const [query, setQuery] = useState('');\n  const [isComplete, setIsComplete] = useState(false);\n  const [todoList, setTodoList] = useState<ITask[]>([]);\n  const [prepareTodoList, setPrepareTodoList] = useState<ITask[]>([]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.name === 'task') {\n      setTask(event.target.value);\n    } else {\n      setQuery(event.target.value);\n      setPrepareTodoList(todoList.filter((task) => {\n        return task.taskName.toLowerCase().includes(\n          event.target.value.toLowerCase(),\n        );\n      }));\n    }\n  };\n\n  const addTask = () => {\n    const newTask = {\n      taskName: task,\n      isComplete,\n      id: uuidv4(),\n    };\n\n    setTodoList([...todoList, newTask]);\n    setPrepareTodoList([...prepareTodoList, newTask]);\n    setTask('');\n    setIsComplete(false);\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      addTask();\n    }\n  };\n\n  const deleteTask = (taskIdToDelete: string) => {\n    setTodoList(todoList.filter((task) => {\n      return task.id !== taskIdToDelete;\n    }));\n\n    setPrepareTodoList(prepareTodoList.filter((task) => {\n      return task.id !== taskIdToDelete;\n    }));\n  };\n\n  const completeTask = (taskIdToComplete: string):void => {\n    setTodoList(todoList.map((task) => {\n      if (task.id === taskIdToComplete) {\n        // eslint-disable-next-line no-param-reassign\n        task.isComplete = !task.isComplete;\n      }\n\n      return task;\n    }));\n  };\n\n  const showAll = (): void => {\n    setPrepareTodoList(todoList.filter((task) => {\n      return task;\n    }));\n  };\n\n  const showInProgress = (): void => {\n    setPrepareTodoList(todoList.filter((task) => {\n      return task.isComplete === false;\n    }));\n  };\n\n  const showDone = (): void => {\n    setPrepareTodoList(todoList.filter((task) => {\n      return task.isComplete === true;\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <form\n        className=\"d-flex flex-column\"\n        onSubmit={e => {\n          e.preventDefault();\n        }}\n      >\n        <div className=\"mb-3 row\">\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Create task</label>\n          <div className=\"d-flex\">\n            <input\n              type=\"text\"\n              placeholder=\"Please enter task\"\n              name=\"task\"\n              value={task}\n              onKeyPress={(e) => handleKeyPress(e)}\n              onChange={(event) => (\n                handleChange(event)\n              )}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-light\"\n              onClick={addTask}\n            >\n              Add Task\n            </button>\n          </div>\n          <label htmlFor=\"exampleInputEmail2\" className=\"form-label\">Search task</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter key word\"\n            name=\"query\"\n            value={query}\n            onChange={(event) => (\n              handleChange(event)\n            )}\n            className=\"form-control\"\n            id=\"exampleInputEmail2\"\n          />\n        </div>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          <button type=\"button\" className=\"btn btn-dark\" onClick={showAll}>Show All</button>\n          <button type=\"button\" className=\"btn btn-dark\" onClick={showInProgress}>In progress</button>\n          <button type=\"button\" className=\"btn btn-dark\" onClick={showDone}>Done task</button>\n        </div>\n      </form>\n\n      <ul className=\"list-group\">\n        {prepareTodoList.map((task: ITask) => {\n          return (\n            <li className=\"list-group-item\" key={task.id}>\n              <TodoTask\n                task={task}\n                deleteTask={deleteTask}\n                completeTask={completeTask}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}